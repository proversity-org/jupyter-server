files: 
  /root/setup_nginx.sh: ~
  mode: "000750"
  owner: root
  group: root
  content: |
    #!/bin/bash
    set -e
      
    . /opt/elasticbeanstalk/hooks/common.sh
      
    EB_CONFIG_DOCKER_PORT_FILE=$(/opt/elasticbeanstalk/bin/get-config container -k port_file)
      
    EB_CONFIG_DOCKER_STAGING_APP_FILE=$(/opt/elasticbeanstalk/bin/get-config container -k app_staging_file)
    EB_CONFIG_DOCKER_CURRENT_APP_FILE=$(/opt/elasticbeanstalk/bin/get-config container -k app_deploy_file)
      
    # now the STAGING container is built and running, flip nginx to the new container
    EB_CONFIG_NGINX_UPSTREAM_IP=$(docker inspect `cat $EB_CONFIG_DOCKER_STAGING_APP_FILE` | jq -r .[0].NetworkSettings.IPAddress)
    EB_CONFIG_NGINX_UPSTREAM_PORT=`cat $EB_CONFIG_DOCKER_PORT_FILE`
      
    # Configure Nginx
    cp .nginx/proxy/* /etc/nginx/sites-available/
      
    # set up symlinks
    FILES=$(ls /etc/nginx/sites-available/)
    for f in $FILES
    do
      ln -s /etc/nginx/sites-available/$f /etc/nginx/sites-enabled/ > /dev/null 2>&1
    done 
      
    # Check if this has been done already
    cat .nginx/hosts/hosts.conf >> /etc/nginx/conf.d/elasticbeanstalk-nginx-docker-upstream.conf
    cat >> /etc/nginx/conf.d/elasticbeanstalk-nginx-docker-upstream.conf <<EOF
    upstream docker {
         server $EB_CONFIG_NGINX_UPSTREAM_IP:$EB_CONFIG_NGINX_UPSTREAM_PORT;
         keepalive 256;
    }
    upstream jupyter {
         server $EB_CONFIG_NGINX_UPSTREAM_IP:3335;
           keepalive 256;
    }
    upstream sifu {
         server $EB_CONFIG_NGINX_UPSTREAM_IP:3334;
         keepalive 256;
    }
    EOF

container_commands:
  000-setup-nginx:
    command: /root/setup_nginx.sh
