Resources:
  AWSEBSecurityGroup:
    Properties:
      GroupDescription: "Security group to allow HTTP, SSH, and Sifu and Jupyter Notebooks"
      SecurityGroupIngress:
        - {CidrIp: "0.0.0.0/0", IpProtocol: "tcp", FromPort: 3335, ToPort: 3335}
        - {CidrIp: "0.0.0.0/0", IpProtocol: "tcp", FromPort: 3334, ToPort: 3334}
        - {CidrIp: "0.0.0.0/0", IpProtocol: "tcp", FromPort: 80, ToPort: 80}
        - {CidrIp: "0.0.0.0/0", IpProtocol: "tcp", FromPort: 22, ToPort: 22}
  AWSEBLoadBalancerSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    VpcId: "vpc-bc6bd1d9"
    Properties:
      SecurityGroupIngress:
        - {CidrIp: "0.0.0.0/0", IpProtocol: "tcp", FromPort: 3335, ToPort: 3335}
        - {CidrIp: "0.0.0.0/0", IpProtocol: "tcp", FromPort: 3334, ToPort: 3334}
        - {CidrIp: "0.0.0.0/0", IpProtocol: "tcp", FromPort: 80, ToPort: 80}
      SecurityGroupEgress:
        - {CidrIp: "0.0.0.0/0", IpProtocol: "tcp", FromPort: 3335, ToPort: 3335}
        - {CidrIp: "0.0.0.0/0", IpProtocol: "tcp", FromPort: 3334, ToPort: 3334}
        - {CidrIp: "0.0.0.0/0", IpProtocol: "tcp", FromPort: 80, ToPort: 80}
  AWSEBLoadBalancer:
    Type: "AWS::ElasticLoadBalancing::LoadBalancer"
    Properties:
      Subnets: "subnet-ebcda08e"
      Listeners:
        - {Protocol: "TCP", LoadBalancerPort: 3335, InstancePort: 3335}
        - {Protocol: "TCP", LoadBalancerPort: 3334, InstancePort: 3334}
        - {Protocol: "TCP", LoadBalancerPort: 80, InstancePort: 80}
