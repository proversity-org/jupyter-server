files:
  "/opt/elasticbeanstalk/hooks/appdeploy/post/02flip.sh" : 
    content: |-
        #!/usr/bin/env bash
        set -e
        
        . /opt/elasticbeanstalk/hooks/common.sh
        
        EB_APP_DEPLOY_DIR=$(/opt/elasticbeanstalk/bin/get-config container -k app_deploy_dir)

        IDS=($(docker ps -q))

        TIMEOUT=1
        while [ ${#IDS[@]} -eq 0 ];
        do
          if [ $TIMEOUT -eq 10 ]
          then
            echo "Docker is not getting up, there is a bigger problem. Please check /var/log/eb-activity.log for more information."
            exit
          fi
          sleep 2
          echo "waiting"
          IDS=($(docker ps -q))
          TIMEOUT=$(( TIMEOUT + 1 ))
        done

        EB_RUNNING_CONTAINER_ID=${IDS[0]}

        # Wait until a container is running
        
        EB_CONFIG_NGINX_UPSTREAM_IP=$(docker inspect --format '{{ .NetworkSettings.IPAddress }}' $EB_RUNNING_CONTAINER_ID)
        
        # AWS has now ensured only 1 docker container will be running.
        
        # Configure Nginx
        cp $EB_APP_DEPLOY_DIR/.ebextensions/.nginx/proxy/* /etc/nginx/sites-available/
        
        for filename in /etc/nginx/sites-available/*.conf; do
            echo "file: $filename"
            ln -f -s $filename /etc/nginx/sites-enabled/ > /dev/null 2>&1
        done
        
        # Check if this has been done already
        > /etc/nginx/conf.d/elasticbeanstalk-nginx-docker-upstream.conf
        cat > /etc/nginx/conf.d/elasticbeanstalk-nginx-docker-upstream.conf <<EOF
        upstream docker {
           server $EB_CONFIG_NGINX_UPSTREAM_IP:3334;
           keepalive 256;
        }
        upstream jupyter {
           server $EB_CONFIG_NGINX_UPSTREAM_IP:3335;
           keepalive 256;
        }
        upstream sifu {
           server $EB_CONFIG_NGINX_UPSTREAM_IP:3334;
           keepalive 256;
        }
        EOF
        service nginx restart
    group: root
    mode: "000755"
    owner: root
