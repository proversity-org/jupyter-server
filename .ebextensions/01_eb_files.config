packages:
    yum:
        nfs-utils: []
        ruby-devel: []
        rubygems: []
files:
  "/opt/elasticbeanstalk/hooks/appdeploy/pre/01aset_up_token.sh" :
    mode: "000755"
    owner: root
    group: root
    content: |
      #!/usr/bin/env bash
      EB_APP_DEPLOY_DIR=$(/opt/elasticbeanstalk/bin/get-config container -k app_deploy_dir)
      DEPLOYMENT_TOKEN=$(/opt/elasticbeanstalk/bin/get-config environment -k DEPLOYMENT_TOKEN)
      touch "$EB_APP_DEPLOY_DIR/.deployment_token"
      echo $DEPLOYMENT_TOKEN > "$EB_APP_DEPLOY_DIR/.deployment_token"

  "/opt/elasticbeanstalk/hooks/appdeploy/pre/01aset_up_all.sh" :
    mode "000755"
    owner: root
    group: root
    content: |-
      #!/opt/elasticbeanstalk/lib/ruby/bin/ruby

      EB_APP_DEPLOY_DIR = `/opt/elasticbeanstalk/bin/get-config container -k app_deploy_dir`
      ENVS = eval(`/opt/elasticbeanstalk/bin/get-config environment`)

      result = ""
      ENVS.each { |k,v| result += "export #{k}=#{v}\n" }

      docker_envs = File.new("#{EB_APP_DEPLOY_DIR}/docker_envs", 'w')
      docker_envs.puts(result)
      docker_envs.close

  "/opt/elasticbeanstalk/hooks/appdeploy/pre/01aset_up_efs.sh" :
    mode: "000755"
    owner: root
    group: root
    content: |
      #!/usr/bin/env bash

      EFS_MOUNT_POINT=$(/opt/elasticbeanstalk/bin/get-config environment -k EFS_MOUNT_POINT)
      EFS_FS_ID=$(/opt/elasticbeanstalk/bin/get-config environment -k EFS_FS_ID)
      EFS_REGION=$(/opt/elasticbeanstalk/bin/get-config environment -k EFS_REGION)

      if [ ! -d $EFS_MOUNT_POINT ]
      then
        mkdir $EFS_MOUNT_POINT
      fi
      if [ ! mountpoint -q $EFS_MOUNT_POINT ]
      then
        # Need to use $REGION and $EFS_ID environment variables. Can't use a find and replace upon deploy because the changes have to then be comitted.
        mount -t nfs4 -o nfsvers=4.1 $(curl -s http://169.254.169.254/latest/meta-data/placement/availability-zone).$EFS_FS_ID.$EFS_REGION.amazonaws.com:/ $EFS_MOUNT_POINT
      fi
